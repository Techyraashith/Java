package dayByday;

import java.util.List;
import java.util.ArrayList;
import java.util.stream.*;

sealed class class1 permits Streams{
	String n = "Hey There!";
}https://www.javatpoint.com/java-type-inference-for-generics

public non-sealed class Streams extends class1{

	public static void main(String[] args) {
		
		System.out.println("This is Sealed class. Access only for Streams Class.");
		
		Streams s = new Streams();
		
		System.out.println(s.n);
		
		   List<Integer> numbers = new ArrayList<Integer>();
		   List<String> Strings = new ArrayList<String>();
		   
		   numbers.add(10);
		   numbers.add(1);
		   numbers.add(7);
		   numbers.add(9);	
		   numbers.add(4);
		   numbers.add(6);
		   numbers.add(2);
		   numbers.add(12);
		   numbers.add(100);
		   numbers.add(19);
		   numbers.add(102);
		   numbers.add(10);
		  
		   Strings.add("Hey!");
		   Strings.add("Raashith");
		   Strings.add("Welcome To Java.");
		   
		   
	        List<Integer> evenNumbers = numbers.stream().filter(n -> n % 2 == 0).collect(Collectors.toList());
	       
	        String toUpper = Strings.stream().map(s -> s.toUpperCase()).collect(Collectors.joining("\n"));

	        
	        // Print the filtered list
	        System.out.println("Even numbers: " + evenNumbers);
	        System.out.println(toUpper);
	       
	        
		
		
	}
}
